{"version":3,"sources":["components/EventRow.js","components/FilterEventModal.js","screens/Events.js","screens/EventPage.js","components/EquipmentRow.js","components/FilterEquipmentModal.js","screens/Equipments.js","screens/EquipmentPage.js","screens/CreateEvent.js","screens/CreateEquipment.js","App.js","reportWebVitals.js","index.js"],"names":["EventRow","event","Fragment","TableRow","onClick","TableCell","component","scope","owner","align","sport","location","players","length","playerCapacity","spectators","spectatorCapacity","date","hours","title","fields","FilterEventModal","props","useState","filter","setFilter","pointMode","banner","control","values","split","point","setLocation","onRemove","undefined","console","log","handleChange","e","id","target","value","filters","l","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","showInputs","overlayAll","useDynamic","map","field","TextField","autoFocus","margin","label","InputLabelProps","shrink","type","fullWidth","onChange","DialogActions","Button","color","_","events","eventId","content","ageGroup","skillLevel","useStyles","makeStyles","table","minWidth","EventScreen","setOpen","text","setText","classes","history","useHistory","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","Container","maxWidth","Grid","container","justify","style","marginBottom","item","xs","placeholder","InputProps","startAdornment","InputAdornment","position","float","variant","startIcon","TableContainer","Paper","Table","className","aria-label","TableHead","TableBody","push","Event","useParams","EquipmentRow","equipment","equipmentType","websiteName","link","postId","FilterEquipmentModal","equipments","EquipmentScreen","Equipment","CreateEvent","CreateEquipment","drawerWidth","theme","root","display","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","flexGrow","backgroundColor","palette","background","default","padding","spacing","App","IconButton","edge","left","top","Drawer","paper","anchor","List","ListItem","button","document","href","ListItemIcon","ListItemText","primary","Divider","exact","from","to","path","Events","EventPage","Equipments","EquipmentPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0ae6c5d.chunk.js","sourcesContent":["import React from 'react'\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport default function EventRow(event){\n\n    return(\n        <React.Fragment>\n            <TableRow key={event.title} onClick={event.onClick}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {event.owner}\n                </TableCell>\n                <TableCell align=\"right\">{event.sport}</TableCell>\n                <TableCell align=\"right\">{event.location}</TableCell>\n                <TableCell align=\"right\">{event.players.length}/{event.playerCapacity}</TableCell>\n                <TableCell align=\"right\">{event.spectators.length}/{event.spectatorCapacity}</TableCell>\n                <TableCell align=\"right\">{event.date} {event.hours}</TableCell>\n            </TableRow>\n        </React.Fragment>\n    )\n}","import React, {useState} from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport LocationPicker from \"react-leaflet-location-picker\";\n\n\nconst fields = [\n    \"Location\",\n    \"Location Range\",\n    \"Age\",\n    \"Gender\",\n    \"Skill Level\"\n]\n\nexport default function FilterEventModal(props){\n    const [filter, setFilter] = useState({})\n\n    const pointMode = {\n        banner: false,\n        control: {\n            values: filter[\"Location\"]?(filter[\"Location\"].split(\",\").length>1?[filter[\"Location\"].split(\",\")]:[]):[],\n            onClick: point =>setLocation(point),\n            onRemove: point =>setLocation(undefined)\n        }\n    };\n    const sendFilter = _=>{\n        props.setFilter(filter)\n        props.handleClose()\n    }\n    console.log(pointMode)\n    const handleChange = e=>{\n        const id = e.target.id\n        const value = e.target.value\n        const filters = {...filter}\n        if(value === \"\")filters[\"\"+id] = undefined\n        else filters[\"\"+id] = value\n        setFilter(filters)\n    }\n    const setLocation = l=>{\n        const filters = {...filter}\n        filters[\"Location\"] = l[0] + \",\" + l[1]\n        setFilter(filters)\n    }\n    return (\n        <React.Fragment>\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Choose Filters</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        You can choose filters to search events.\n                    </DialogContentText>\n                    <LocationPicker\n                        pointMode={pointMode}\n                        showInputs={false}\n                        overlayAll={false}\n                        useDynamic={false}\n                    />\n                    {\n                        fields.map(field=>(\n                            <TextField\n                                key={field}\n                                autoFocus\n                                margin=\"dense\"\n                                id={field}\n                                label={field}\n                                InputLabelProps={{ shrink: true }}\n                                type=\"string\"\n                                fullWidth\n                                onChange={handleChange}\n                                value={filter[field]}\n                            />\n                        ))\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={sendFilter} color=\"primary\">\n                        Subscribe\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport Container from \"@material-ui/core/Container\";\nimport {InputAdornment, makeStyles, TextField} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EventRow from '../components/EventRow'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from \"react-router-dom\";\nimport FilterEventModal from \"../components/FilterEventModal\";\n\nconst events = [\n    {\n        eventId: 1,\n        owner: \"emre_gundogu\",\n        title:  \"Tennis Game for Everyone\",\n        content: \"People who are looking for a tennis court can apply this event. Our court is for you if you are seeking for a clean and well-lit court.\",\n        location: \"Bebek Tennis Club\",\n        date: \"01.05.2021\",\n        hours: \"15.00\",\n        sport: \"Tennis\",\n        ageGroup: \"Any age\",\n        skillLevel: \"Any level\",\n        playerCapacity: \"2\",\n        spectatorCapacity: \"8\",\n        spectators: [],\n        players: []\n    }\n]\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n/*\n* Filter\n* {\n*   field: {\n*       range:[int,int],\n*   }\n* }\n* */\n\n\nexport default function EventScreen() {\n    const [open, setOpen] = useState(false);\n    const [filter, setFilter] = useState({});\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const [text, setText] = useState(\"\")\n    const classes = useStyles();\n    const history = useHistory()\n    const [width, setWidth] = useState(window.innerWidth);\n    const handleWindowSizeChange = () => {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Container maxWidth={\"md\"}>\n                <Grid container justify={\"space-between\"} style={{marginBottom:20}}>\n                    <Grid item xs={width>600?10:9}>\n                        <TextField\n                            placeholder={\"Search Event\"}\n                            fullWidth\n                            value={text}\n                            onChange={e=>setText(e.target.value)}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon/>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button style={{float:\"right\"}} variant=\"contained\" color=\"primary\">Search</Button>\n                    </Grid>\n                </Grid>\n                <Button\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    startIcon={<FilterListIcon/>}\n                    onClick={_=>setOpen(true)}\n                >\n                    Filter\n                </Button>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Event Creator</TableCell>\n                                <TableCell align=\"right\">Sport</TableCell>\n                                <TableCell align=\"right\">Field</TableCell>\n                                <TableCell align=\"right\">Players</TableCell>\n                                <TableCell align=\"right\">Spectators</TableCell>\n                                <TableCell align=\"right\">Date</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {events.map(event => (\n                                <EventRow\n                                    onClick={_=>history.push(\"/event/\"+event.eventId)}\n                                    key={event.title}\n                                    {...event}\n                                />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <FilterEventModal\n                open={open}\n                handleClose={handleClose}\n                setFilter={setFilter}\n            />\n        </React.Fragment>\n    );\n}\n\n","import React from 'react'\nimport {useParams} from 'react-router-dom'\n\nexport default function Event(props){\n    let {id} = useParams()\n    return(\n        <React.Fragment>\n\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport default function EquipmentRow(equipment){\n    return(\n        <React.Fragment>\n            <TableRow key={equipment.postId} onClick={equipment.onClick}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {equipment.equipmentType}\n                </TableCell>\n                <TableCell align=\"right\">{equipment.title}</TableCell>\n                <TableCell align=\"right\">{equipment.location}</TableCell>\n                <TableCell align=\"right\">{equipment.websiteName}</TableCell>\n                <TableCell align=\"right\">{equipment.link}</TableCell>\n            </TableRow>\n        </React.Fragment>\n    )\n}\n","import React, {useState} from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport LocationPicker from \"react-leaflet-location-picker\";\n\nconst fields = [\n    \"Type\",\n    \"Website Name\",\n    \"Link\"\n]\n\nexport default function FilterEquipmentModal(props){\n  const [filter, setFilter] = useState({})\n\n  const pointMode = {\n      banner: false,\n      control: {\n          values: filter[\"Location\"]?(filter[\"Location\"].split(\",\").length>1?[filter[\"Location\"].split(\",\")]:[]):[],\n          onClick: point =>setLocation(point),\n          onRemove: point =>setLocation(undefined)\n      }\n  };\n  const sendFilter = _=>{\n      props.setFilter(filter)\n      props.handleClose()\n  }\n  console.log(pointMode)\n  const handleChange = e=>{\n      const id = e.target.id\n      const value = e.target.value\n      const filters = {...filter}\n      if(value === \"\")filters[\"\"+id] = undefined\n      else filters[\"\"+id] = value\n      setFilter(filters)\n  }\n  const setLocation = l=>{\n      const filters = {...filter}\n      filters[\"Location\"] = l[0] + \",\" + l[1]\n      setFilter(filters)\n  }\n  return (\n      <React.Fragment>\n          <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\">Choose Filters</DialogTitle>\n              <DialogContent>\n                  <DialogContentText>\n                      You can choose filters to search equipments.\n                  </DialogContentText>\n                  <LocationPicker\n                      pointMode={pointMode}\n                      showInputs={false}\n                      overlayAll={false}\n                      useDynamic={false}\n                  />\n                  {\n                      fields.map(field=>(\n                          <TextField\n                              key={field}\n                              autoFocus\n                              margin=\"dense\"\n                              id={field}\n                              label={field}\n                              InputLabelProps={{ shrink: true }}\n                              type=\"string\"\n                              fullWidth\n                              onChange={handleChange}\n                              value={filter[field]}\n                          />\n                      ))\n                  }\n                  <TextField\n                      autoFocus\n                      margin=\"dense\"\n                      id={\"Istanbul\"}\n                      label={\"location\"}\n                      InputLabelProps={{ shrink: true }}\n                      type=\"string\"\n                      fullWidth\n                      onChange={handleChange}\n                      value={filter[\"location\"]}\n                  />\n              </DialogContent>\n              <DialogActions>\n                  <Button onClick={props.handleClose} color=\"primary\">\n                      Cancel\n                  </Button>\n                  <Button onClick={sendFilter} color=\"primary\">\n                      Subscribe\n                  </Button>\n              </DialogActions>\n          </Dialog>\n      </React.Fragment>\n  )\n  // TODO (@Bikem): Remove .map's and define text fields one by one.\n\n}\n","import React, {useEffect, useState} from 'react'\nimport Container from \"@material-ui/core/Container\";\nimport {InputAdornment, makeStyles, TextField} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EquipmentRow from '../components/EquipmentRow'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from \"react-router-dom\";\nimport FilterEquipmentModal from \"../components/FilterEquipmentModal\";\n\nconst equipments = [\n  {\n\t\t\"postId\": 1,\n\t\t\"ownerId\": 1,\n\t\t\"content\": \"A nice ball\",\n\t\t\"title\": \"Well-conditioned ball\",\n\t\t\"creationDate\": \"29.05.2021\",\n\t\t\"lastUpdateDate\": \"29.05.2021\",\n\t\t\"numberOfClicks\": 1,\n\t\t\"location\": \"İstanbul\",\n\t\t\"equipmentType\": \"Ball\",\n\t\t\"websiteName\": \"ismycomputeron\",\n\t\t\"link\": \"www.ismycomputeron.com\"\n\t}\n]\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nexport default function EquipmentScreen() {\n    const [open, setOpen] = useState(false);\n    const [filter, setFilter] = useState({});\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const [text, setText] = useState(\"\")\n    const classes = useStyles();\n    const history = useHistory()\n    const [width, setWidth] = useState(window.innerWidth);\n    const handleWindowSizeChange = () => {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Container maxWidth={\"md\"}>\n                <Grid container justify={\"space-between\"} style={{marginBottom:20}}>\n                    <Grid item xs={width>600?10:9}>\n                        <TextField\n                            placeholder={\"Search Equipment\"}\n                            fullWidth\n                            value={text}\n                            onChange={e=>setText(e.target.value)}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon/>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button style={{float:\"right\"}} variant=\"contained\" color=\"primary\">Search</Button>\n                    </Grid>\n                </Grid>\n                <Button\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    startIcon={<FilterListIcon/>}\n                    onClick={_=>setOpen(true)}\n                >\n                    Filter\n                </Button>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableCell>Type</TableCell>\n                            <TableCell align=\"right\">Title</TableCell>\n                            <TableCell align=\"right\">Location</TableCell>\n                            <TableCell align=\"right\">Website Name</TableCell>\n                            <TableCell align=\"right\">Link</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {equipments.map(equipment => (\n                                <EquipmentRow\n                                    onClick={_=>history.push(\"/equipment/\"+equipment.postId)}\n                                    key={equipment.title}\n                                    {...equipment}\n                                />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <FilterEquipmentModal\n                open={open}\n                handleClose={handleClose}\n                setFilter={setFilter}\n            />\n        </React.Fragment>\n    );\n}\n","import React from 'react'\nimport {useParams} from 'react-router-dom'\n\nexport default function Equipment(props){\n    let {id} = useParams()\n    return(\n        <React.Fragment>\n\n        </React.Fragment>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport Container from \"@material-ui/core/Container\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EventRow from '../components/EventRow'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from \"react-router-dom\";\nimport FilterEventModal from \"../components/FilterEventModal\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst events = [\n    {\n        eventId: 1,\n        owner: \"emre_gundogu\",\n        title:  \"Tennis Game for Everyone\",\n        content: \"People who are looking for a tennis court can apply this event. Our court is for you if you are seeking for a clean and well-lit court.\",\n        location: \"Bebek Tennis Club\",\n        date: \"01.05.2021\",\n        hours: \"15.00\",\n        sport: \"Tennis\",\n        ageGroup: \"Any age\",\n        skillLevel: \"Any level\",\n        playerCapacity: \"2\",\n        spectatorCapacity: \"8\",\n        spectators: [],\n        players: []\n    }\n]\n\nconst fields = [\n    \"Age\",\n    \"Location\",\n    \"Location Range\",\n    \"Gender\",\n    \"Skill Level\"\n]\n\nexport default function CreateEvent() {\n\n    return (\n        <React.Fragment>\n            <Container maxWidth={\"md\"}>\n                {\n                    fields.map(field=>(\n                        <TextField\n                            key={field}\n                            autoFocus\n                            margin=\"dense\"\n                            id={field}\n                            label={field}\n                            type=\"string\"\n                            fullWidth\n\n                        />\n                    ))\n                }\n            </Container>\n        </React.Fragment>\n    );\n}\n\n","import React, {useEffect, useState} from 'react'\nimport Container from \"@material-ui/core/Container\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EventRow from '../components/EventRow'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from \"react-router-dom\";\nimport FilterEventModal from \"../components/FilterEventModal\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst equipments = [\n  {\n\t\t\"postId\": 1,\n\t\t\"ownerId\": 1,\n\t\t\"content\": \"A nice ball\",\n\t\t\"title\": \"Well-conditioned ball\",\n\t\t\"creationDate\": \"29.05.2021\",\n\t\t\"lastUpdateDate\": \"29.05.2021\",\n\t\t\"numberOfClicks\": 1,\n\t\t\"location\": \"İstanbul\",\n\t\t\"equipmentType\": \"Ball\",\n\t\t\"websiteName\": \"ismycomputeron\",\n\t\t\"link\": \"www.ismycomputeron.com\"\n\t}\n]\n\nconst fields = [\n    \"Type\",\n    \"Website Name\",\n    \"Link\"\n]\n\nexport default function CreateEquipment() {\n    return (\n        <React.Fragment>\n            <Container maxWidth={\"md\"}>\n                {\n                    fields.map(field=>(\n                        <TextField\n                            key={field}\n                            autoFocus\n                            margin=\"dense\"\n                            id={field}\n                            label={field}\n                            type=\"string\"\n                            fullWidth\n                        />\n                    ))\n                }\n            </Container>\n        </React.Fragment>\n    );\n}\n","import React, {useEffect, useState} from 'react'\nimport Events from \"./screens/Events\";\nimport EventPage from \"./screens/EventPage\";\nimport Equipments from \"./screens/Equipments\";\nimport EquipmentPage from \"./screens/EquipmentPage\";\nimport {\n    Route,\n    Switch,\n    BrowserRouter as Router,\n    Redirect,\n    useHistory\n} from \"react-router-dom\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {Divider, makeStyles, ListItemIcon, ListItemText, IconButton} from \"@material-ui/core\";\nimport SportsIcon from '@material-ui/icons/Sports';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CreateEvent from \"./screens/CreateEvent\";\nimport CreateEquipment from \"./screens/CreateEquipment\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction App() {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n\n    const [width, setWidth] = useState(window.innerWidth);\n    const handleWindowSizeChange = () => {\n        setWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    return (\n    <React.Fragment>\n        <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={_=>setOpen(true)}\n            edge=\"start\"\n            style={{\n                left:5,\n                top:5\n            }}\n        >\n            <MenuIcon />\n        </IconButton>\n        <Drawer\n            className={classes.drawer}\n            open={open}\n            onClose={_=>setOpen(false)}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n            anchor=\"left\"\n            variant={width >= 1450?\"permanent\":null}\n        >\n            <List>\n                <ListItem button onClick={_=>{document.location.href=\"/events\"}}>\n                    <ListItemIcon><SportsIcon/></ListItemIcon>\n                    <ListItemText primary={\"Events\"} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem button onClick={_=>{document.location.href=\"/equipments\"}}>\n                    <ListItemIcon><ShoppingCartIcon/></ListItemIcon>\n                    <ListItemText primary={\"Equipments\"} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem button onClick={_=>{document.location.href=\"/create-event\"}}>\n                    <ListItemIcon><ShoppingCartIcon/></ListItemIcon>\n                    <ListItemText primary={\"Create Event\"}/>\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem button onClick={_=>{document.location.href=\"/create-equipment\"}}>\n                    <ListItemIcon><ShoppingCartIcon/></ListItemIcon>\n                    <ListItemText primary={\"Create Equipment\"} />\n                </ListItem>\n            </List>\n        </Drawer>\n        <Router>\n            <Switch>\n                <Redirect exact from=\"/\" to=\"/events\"/>}\n                <Route path={'/events'} component={Events}/>\n                <Route path={'/event/:id'} component={EventPage}/>\n                <Route path={'/create-event'} component={CreateEvent}/>\n                <Route path={'/equipments'} component={Equipments}/>\n                <Route path={'/equipment/:id'} component={EquipmentPage}/>\n                <Route path={'/create-equipment'} component={CreateEquipment}/>\n            </Switch>\n        </Router>\n    </React.Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}